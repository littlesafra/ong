for(col in 1:5){
for(row in 1:5){
x<-as.numeric(total.recurso[col])
y<-as.numeric(Tabla_Cuadrante[row,6])
eragiketa <-as.numeric(lapply((x*y / 100))
total.recursos.cluster[row, col] <- eragiketa
}
}
total.recursos.cluster = matrix(1:25, nrow=5, ncol=5)
for(col in 1:5){
for(row in 1:5){
x<-as.numeric(total.recurso[col])
y<-as.numeric(Tabla_Cuadrante[row,6])
eragiketa <-as.numeric((x*y / 100))
total.recursos.cluster[row, col] <- eragiketa
}
}
View(total.recursos.cluster)
col<-1
row<-1
x<-as.numeric(total.recurso[col])
y<-as.numeric(Tabla_Cuadrante[row,6])
print(x)
print(y)
eragiketa <-as.numeric((x*y / 100))
print(eragiketa)
total.recursos.cluster[row, col] <- eragiketa
View(total.recursos.cluster)
row<-2
x<-as.numeric(total.recurso[col])
y<-as.numeric(Tabla_Cuadrante[row,6])
print(x)
print(y)
eragiketa <-as.numeric((x*y / 100))
total.recursos.cluster[row, col] <- eragiketa
print(eragiketa)
total.recursos.cluster[row, col] <- eragiketa
x<-as.numeric(total.recurso[col])
y<-as.numeric(Tabla_Cuadrante[row,6])
print(x)
print(y)
eragiketa <-as.numeric((x*y / 100))
print(eragiketa)
total.recursos.cluster[row, col] <- eragiketa
x<-as.numeric(total.recurso[col])
y<-as.numeric(Tabla_Cuadrante[row,6])
print(x)
print(y)
eragiketa <-as.numeric((x*y / 100))
print(eragiketa)
total.recursos.cluster[row, col] <- eragiketa
x<-as.numeric(total.recurso[col])
y<-as.numeric(Tabla_Cuadrante[row,6])
print(x)
print(y)
eragiketa <-as.numeric((x*y / 100))
print(eragiketa)
total.recursos.cluster[row, col] <- eragiketa
#Recursos a cada cluster
total.recursos.cluster = matrix(1:25, nrow=5, ncol=5)
col<-1
row<-5
for(col in 1:5){
for(row in 1:5){
x<-as.numeric(total.recurso[col])
y<-as.numeric(Tabla_Cuadrante[row,6])
print(x)
print(y)
eragiketa <-as.numeric((x*y / 100))
print(eragiketa)
total.recursos.cluster[row, col] <- eragiketa
}
}
#Recursos a cada cluster
total.recursos.cluster = matrix(1:25, nrow=5, ncol=5)
col<-1
row<-5
for(col in 1:5){
for(row in 1:5){
x<-as.numeric(total.recurso[col])
y<-as.numeric(Tabla_Cuadrante[row,6])
print(x)
print(y)
eragiketa <-as.numeric((x*y / 100))
print(eragiketa)
total.recursos.cluster[row, col] <- lapply(eragiketa, round,0)
}
}
for(col in 1:5){
for(row in 1:5){
x<-as.numeric(total.recurso[col])
y<-as.numeric(Tabla_Cuadrante[row,6])
print(x)
print(y)
eragiketa <-as.numeric((x*y / 100))
eragiketa <- lapply(eragiketa, round,0)
print(eragiketa)
total.recursos.cluster[row, col] <- eragiketa
}
}
eragiketa <- as.numeric(lapply(eragiketa, round,0))
print(eragiketa)
for(col in 1:5){
for(row in 1:5){
x<-as.numeric(total.recurso[col])
y<-as.numeric(Tabla_Cuadrante[row,6])
eragiketa <-as.numeric((x*y / 100))
total.recursos.cluster[row, col] <- as.numeric(lapply(eragiketa, round,0))
}
}
for(col in 1:5){
for(row in 1:5){
x<-as.numeric(total.recurso[col])
y<-as.numeric(Tabla_Cuadrante[row,6])
eragiketa <-as.numeric((x*y / 100))
eragiketa <- as.numeric(lapply(eragiketa, round,0))
total.recursos.cluster[row, col] <- eragiketa
}
}
print(eragiketa)
total.recursos.cluster = matrix(1:25, nrow=5, ncol=5)
for(col in 1:5){
for(row in 1:5){
x<-as.numeric(total.recurso[col])
y<-as.numeric(Tabla_Cuadrante[row,6])
eragiketa <-as.numeric((x*y / 100))
eragiketa <- as.numeric(lapply(eragiketa, round,0))
total.recursos.cluster[row, col] <- eragiketa
}
}
total.necesidad = array()
#rellenar con 0s
for(i in 1:5){
total.necesidad[i]<-0
}
for(col in 2:ncol(Necesidades_Destino)){
for(row in 1:nrow(Necesidades_Destino)){
if(Necesidades_Destino[row,7] == 1) total.necesidad[1] <-total.necesidad[1]+Necesidades_Destino[row,col]
if(Necesidades_Destino[row,7] == 2) total.necesidad[2] <-total.necesidad[2]+Necesidades_Destino[row,col]
if(Necesidades_Destino[row,7] == 3) total.necesidad[3] <-total.necesidad[3]+Necesidades_Destino[row,col]
if(Necesidades_Destino[row,7] == 4) total.necesidad[4] <-total.necesidad[4]+Necesidades_Destino[row,col]
if(Necesidades_Destino[row,7] == 5) total.necesidad[5] <-total.necesidad[5]+Necesidades_Destino[row,col]
}
}
View(Tabla_Cuadrante)
View(Necesidades_Destino)
View(Necesidades_Destino)
total.necesidad.cluster<- sum(filter(NecesidadesDestino[row], NecesidadesDestino$Cluster == row))
total.necesidad.cluster= matrix(1:25, nrow=5, ncol=5)
for(row in 1:5){
for(col int 1:5){
total.necesidad.cluster<- sum(filter(Necesidades_Destino[col], Necesidades_Destino$Cluster == row))
}
}
prueba<-filter(Necesidades_Destino[col], Necesidades_Destino$Cluster == row))
prueba<-filter(Necesidades_Destino[col], Necesidades_Destino$Cluster == row)
print(prueba)
row<-1
col<-1
prueba<-filter(Necesidades_Destino[col], Necesidades_Destino$Cluster == row)
prueba<-filter(Necesidades_Destino[col], Cluster == row)
prueba<-filter(Necesidades_Destino$'1', Cluster == row)
prueba<-filter(Necesidades_Destino$'1', Necesidades_Destino$Cluster == row)
prueba<-filter(Necesidades_Destino$1, Necesidades_Destino$Cluster == row)
prueba<-filter(Necesidades_Destino, Necesidades_Destino$Cluster == row)
print(prubea)
print(prueba)
library(dplyr)
filter(Necesidades_Destino, Necesidades_Destino$Cluster == row)
library(dplyr)
total.necesidad.cluster= matrix(1:25, nrow=5, ncol=5)
for(row in 1:5){
for(col int 1:5){
filtro <- filter(Necesidades_Destino, Necesidades_Destino$Cluster == row)
total.necesidad.cluster[row, col] <- sum(Necesidades_Destino$col)
}
}
library(dplyr)
total.necesidad.cluster= matrix(1:25, nrow=5, ncol=5)
for(row in 1:5){
for(col int 1:5){
filtro <- filter(Necesidades_Destino, Necesidades_Destino$Cluster == row)
print(filtro)
}
}
filtro <- filter(Necesidades_Destino, Necesidades_Destino$Cluster == row)
for(row in 1:5){
for(col in 1:5){
filtro <- filter(Necesidades_Destino, Necesidades_Destino$Cluster == row)
print(filtro)
}
}
total.necesidad.cluster[row, col] <- sum(Necesidades_Destino$col)
library(dplyr)
total.necesidad.cluster= matrix(1:25, nrow=5, ncol=5)
for(row in 1:5){
for(col in 1:5){
filtro <- filter(Necesidades_Destino, Necesidades_Destino$Cluster == row)
total.necesidad.cluster[row, col] <- sum(Necesidades_Destino$col)
print(filtro)
}
}
View(total.necesidad.cluster)
total.necesidad.cluster[row, col] <- sum(Necesidades_Destino$'col')
total.necesidad.cluster[row, col] <- sum(Necesidades_Destino[,row])
library(dplyr)
total.necesidad.cluster= matrix(1:25, nrow=5, ncol=5)
for(row in 1:5){
for(col in 1:5){
filtro <- filter(Necesidades_Destino, Necesidades_Destino$Cluster == row)
total.necesidad.cluster[row, col] <- sum(Necesidades_Destino[,row])
print(filtro)
}
}
library(dplyr)
total.necesidad.cluster= matrix(1:25, nrow=5, ncol=5)
for(row in 1:5){
for(col in 1:5){
filtro <- filter(Necesidades_Destino, Necesidades_Destino$Cluster == row)
total.necesidad.cluster[row, col] <- sum(Necesidades_Destino[,col])
print(filtro)
}
}
total.necesidad.cluster[row, col] <- sum(Necesidades_Destino[ , col])
> total.necesidad.cluster[row, col] <- sum(Necesidades_Destino[,row])
total.necesidad.cluster[row, col] <- sum(Necesidades_Destino[,row])
library(dplyr)
total.necesidad.cluster= matrix(1:25, nrow=5, ncol=5)
total.necesidad.cluster[row, col] <- sum(Necesidades_Destino[ , col])
library(dplyr)
total.necesidad.cluster= matrix(1:25, nrow=5, ncol=5)
for(row in 1:5){
for(col in 1:5){
filtro <- filter(Necesidades_Destino, Necesidades_Destino$Cluster == row)
total.necesidad.cluster[row, col] <- sum(Necesidades_Destino[ ,'col'])
print(filtro)
}
}
total.necesidad.cluster[row, col] <- sum(Necesidades_Destino$'col')
library(dplyr)
total.necesidad.cluster= matrix(1:25, nrow=5, ncol=5)
for(row in 1:5){
for(col in 1:5){
filtro <- filter(Necesidades_Destino, Necesidades_Destino$Cluster == row)
total.necesidad.cluster[row, col] <- sum(Necesidades_Destino$'col')
print(filtro)
}
}
filtro <- filter(Necesidades_Destino, Necesidades_Destino$Cluster == row)
print(filtro)
total.necesidad.cluster= matrix(1:25, nrow=5, ncol=5)
for(cluster in 1:5){
filtro <- filter(Necesidades_Destino, Necesidades_Destino$Cluster == row)
for(col in ncol(filtro)){
sum <-0
for(row in 1:nrow(filtro)){
sum <-  sum + total.recursos.cluster[row, col]
}
total.necesidad.cluster[cluster, col]
}
}
for(cluster in 1:5){
filtro <- filter(Necesidades_Destino, Necesidades_Destino$Cluster == cluster)
for(col in ncol(filtro)){
sum <-0
for(row in 1:nrow(filtro)){
sum <-  sum + total.recursos.cluster[row, col]
}
total.necesidad.cluster[cluster, col]
}
}
cluster<-1
filtro <- filter(Necesidades_Destino, Necesidades_Destino$Cluster == cluster)
print(filtro)
remove(list = ls())
library("readxl")
data <- read_excel("/Users/ACER/Desktop/DataSetComarcas.xls")
data.scale <- scale(data[,2:7])
set.seed(80)
data.km <- kmeans(data.scale,centers = 5)
#contenido del objeto
names(data.km)
#asignaciones del cluster
data.km$cluster
#a?adimos clusters a la tabla
data$Cluster <- data.km$cluster
#Poblacion total
Poblacion_total <- sum(data$Poblacion)
#Utilizando For
for(i in 1:5){
Poblacion <- sum(data$Poblacion[data$Cluster == i])
Inmigracion <- sum(data$Inmigracion[data$Cluster == i])
Tasa_paro <- mean(data$Tasa_paro[data$Cluster == i])
Renta_Personal <- mean(data$Renta_Personal[data$Cluster == i])
Renta_Familiar <- mean(data$Renta_Familiar[data$Cluster == i])
Renta_Mixta <- (Renta_Personal/Renta_Familiar * 100)
porcentajePoblacion <- porcentajePoblacion <- Poblacion * 100 / Poblacion_total
Cluster <- i
if(i == 1)g1 <- data.frame(cbind(Poblacion,Inmigracion,Tasa_paro,Renta_Personal,Renta_Familiar,Renta_Mixta,porcentajePoblacion,Cluster))
else if(i == 2)g2 <- data.frame(cbind(Poblacion,Inmigracion,Tasa_paro,Renta_Personal,Renta_Familiar,Renta_Mixta,porcentajePoblacion,Cluster))
else if(i == 3)g3 <- data.frame(cbind(Poblacion,Inmigracion,Tasa_paro,Renta_Personal,Renta_Familiar,Renta_Mixta,porcentajePoblacion,Cluster))
else if(i == 4)g4 <- data.frame(cbind(Poblacion,Inmigracion,Tasa_paro,Renta_Personal,Renta_Familiar,Renta_Mixta,porcentajePoblacion,Cluster))
else g5 <- data.frame(cbind(Poblacion,Inmigracion,Tasa_paro,Renta_Personal,Renta_Familiar,Renta_Mixta,porcentajePoblacion,Cluster))
}
medias_total <- data.frame(rbind(as.matrix(g1),as.matrix(g2),as.matrix(g3),as.matrix(g4),as.matrix(g5)))
#Mostramos un grafico XY con la poblacion por
plot(medias_total$porcentajePoblacion,medias_total$Renta_Mixta, ylab="% Renta Mixta", xlab="% Poblacion", col="Red")
#Tabla indentificador cuadrante
Renta_Cuadrante <- (max(medias_total$Renta_Mixta) + min(medias_total$Renta_Mixta))/2
Poblacion_Cuadrante <- (max(medias_total$porcentajePoblacion) + min(medias_total$porcentajePoblacion))/2
for(i in 1:5){
Grupo <- i
Renta_Mixta <- medias_total$Renta_Mixta[medias_total$Cluster == i]
porcentajePoblacion <- medias_total$porcentajePoblacion[medias_total$Cluster == i]
Porcentaje_Recursos <- 0
Distancia <- 0
if(Renta_Mixta >= Renta_Cuadrante && porcentajePoblacion < Poblacion_Cuadrante){
Cuadrante <- as.numeric(1)
Importancia <- as.numeric(5)
}else if(Renta_Mixta >= Renta_Cuadrante && porcentajePoblacion >= Poblacion_Cuadrante){
Cuadrante <- as.numeric(2)
Importancia <- as.numeric(20)
}else if(Renta_Mixta < Renta_Cuadrante && porcentajePoblacion < Poblacion_Cuadrante){
Cuadrante <- as.numeric(3)
Importancia <- as.numeric(30)
}else{
Cuadrante <- as.numeric(4)
Importancia <- as.numeric(45)
}
if(i == 1)t1 <- data.frame(cbind(Grupo,Renta_Mixta,porcentajePoblacion,Importancia,Cuadrante,Porcentaje_Recursos,Distancia))
else if(i == 2)t2 <- data.frame(cbind(Grupo,Renta_Mixta,porcentajePoblacion,Importancia,Cuadrante,Porcentaje_Recursos,Distancia))
else if(i == 3)t3 <- data.frame(cbind(Grupo,Renta_Mixta,porcentajePoblacion,Importancia,Cuadrante,Porcentaje_Recursos,Distancia))
else if(i == 4)t4 <- data.frame(cbind(Grupo,Renta_Mixta,porcentajePoblacion,Importancia,Cuadrante,Porcentaje_Recursos,Distancia))
else t5 <- data.frame(cbind(Grupo,Renta_Mixta,porcentajePoblacion,Importancia,Cuadrante,Porcentaje_Recursos,Distancia))
}
Tabla_Cuadrante <- data.frame(rbind(as.matrix(t1),as.matrix(t2),as.matrix(t3),as.matrix(t4),as.matrix(t5)))
#Para el calculo de las distancias
Poblacion<- 0
Inmigracion <- 0
Tasa_paro <- 0
Renta_Personal <- 0
Renta_Familiar <- 0
Renta_Mixta <- 0
porcentajePoblacion <- Poblacion * 100 / Poblacion_total
Cluster <- 0
g6 <- data.frame(cbind(Poblacion, Inmigracion, Tasa_paro, Renta_Personal, Renta_Familiar, Renta_Mixta,porcentajePoblacion,Cluster))
medias_total <- data.frame(rbind(as.matrix(g1),as.matrix(g2),as.matrix(g3),as.matrix(g4),as.matrix(g5),as.matrix(g6)))
#Borrar variables inecesarias
remove(g1,g2,g3,g4,g5,g6,t1,t2,t3,t4,t5)
Tabla_Cuadrante <- data.frame(rbind(as.matrix(t1),as.matrix(t2),as.matrix(t3),as.matrix(t4),as.matrix(t5)))
#Para el calculo de las distancias
Poblacion<- 0
Inmigracion <- 0
Tasa_paro <- 0
Renta_Personal <- 0
Renta_Familiar <- 0
Renta_Mixta <- 0
porcentajePoblacion <- Poblacion * 100 / Poblacion_total
Cluster <- 0
g6 <- data.frame(cbind(Poblacion, Inmigracion, Tasa_paro, Renta_Personal, Renta_Familiar, Renta_Mixta,porcentajePoblacion,Cluster))
medias_total <- data.frame(rbind(as.matrix(g1),as.matrix(g2),as.matrix(g3),as.matrix(g4),as.matrix(g5),as.matrix(g6)))
#Borrar variables inecesarias
remove(g1,g2,g3,g4,g5,g6,t1,t2,t3,t4,t5)
View(Tabla_Cuadrante)
View(Tabla_Cuadrante)
remove(list = ls())
library("readxl")
data <- read_excel("/Users/ACER/Desktop/DataSetComarcas.xls")
data.scale <- scale(data[,2:7])
set.seed(80)
data.km <- kmeans(data.scale,centers = 5)
#contenido del objeto
names(data.km)
#asignaciones del cluster
data.km$cluster
#a?adimos clusters a la tabla
data$Cluster <- data.km$cluster
#Poblacion total
Poblacion_total <- sum(data$Poblacion)
#Utilizando For
for(i in 1:5){
Poblacion <- sum(data$Poblacion[data$Cluster == i])
Inmigracion <- sum(data$Inmigracion[data$Cluster == i])
Tasa_paro <- mean(data$Tasa_paro[data$Cluster == i])
Renta_Personal <- mean(data$Renta_Personal[data$Cluster == i])
Renta_Familiar <- mean(data$Renta_Familiar[data$Cluster == i])
Renta_Mixta <- (Renta_Personal/Renta_Familiar * 100)
porcentajePoblacion <- porcentajePoblacion <- Poblacion * 100 / Poblacion_total
Cluster <- i
if(i == 1)g1 <- data.frame(cbind(Poblacion,Inmigracion,Tasa_paro,Renta_Personal,Renta_Familiar,Renta_Mixta,porcentajePoblacion,Cluster))
else if(i == 2)g2 <- data.frame(cbind(Poblacion,Inmigracion,Tasa_paro,Renta_Personal,Renta_Familiar,Renta_Mixta,porcentajePoblacion,Cluster))
else if(i == 3)g3 <- data.frame(cbind(Poblacion,Inmigracion,Tasa_paro,Renta_Personal,Renta_Familiar,Renta_Mixta,porcentajePoblacion,Cluster))
else if(i == 4)g4 <- data.frame(cbind(Poblacion,Inmigracion,Tasa_paro,Renta_Personal,Renta_Familiar,Renta_Mixta,porcentajePoblacion,Cluster))
else g5 <- data.frame(cbind(Poblacion,Inmigracion,Tasa_paro,Renta_Personal,Renta_Familiar,Renta_Mixta,porcentajePoblacion,Cluster))
}
medias_total <- data.frame(rbind(as.matrix(g1),as.matrix(g2),as.matrix(g3),as.matrix(g4),as.matrix(g5)))
#Mostramos un grafico XY con la poblacion por
plot(medias_total$porcentajePoblacion,medias_total$Renta_Mixta, ylab="% Renta Mixta", xlab="% Poblacion", col="Red")
#Tabla indentificador cuadrante
Renta_Cuadrante <- (max(medias_total$Renta_Mixta) + min(medias_total$Renta_Mixta))/2
Poblacion_Cuadrante <- (max(medias_total$porcentajePoblacion) + min(medias_total$porcentajePoblacion))/2
for(i in 1:5){
Grupo <- i
Renta_Mixta <- medias_total$Renta_Mixta[medias_total$Cluster == i]
porcentajePoblacion <- medias_total$porcentajePoblacion[medias_total$Cluster == i]
Porcentaje_Recursos <- 0
Distancia <- 0
if(Renta_Mixta >= Renta_Cuadrante && porcentajePoblacion < Poblacion_Cuadrante){
Cuadrante <- as.numeric(1)
Importancia <- as.numeric(5)
}else if(Renta_Mixta >= Renta_Cuadrante && porcentajePoblacion >= Poblacion_Cuadrante){
Cuadrante <- as.numeric(2)
Importancia <- as.numeric(20)
}else if(Renta_Mixta < Renta_Cuadrante && porcentajePoblacion < Poblacion_Cuadrante){
Cuadrante <- as.numeric(3)
Importancia <- as.numeric(30)
}else{
Cuadrante <- as.numeric(4)
Importancia <- as.numeric(45)
}
if(i == 1)t1 <- data.frame(cbind(Grupo,Renta_Mixta,porcentajePoblacion,Importancia,Cuadrante,Porcentaje_Recursos,Distancia))
else if(i == 2)t2 <- data.frame(cbind(Grupo,Renta_Mixta,porcentajePoblacion,Importancia,Cuadrante,Porcentaje_Recursos,Distancia))
else if(i == 3)t3 <- data.frame(cbind(Grupo,Renta_Mixta,porcentajePoblacion,Importancia,Cuadrante,Porcentaje_Recursos,Distancia))
else if(i == 4)t4 <- data.frame(cbind(Grupo,Renta_Mixta,porcentajePoblacion,Importancia,Cuadrante,Porcentaje_Recursos,Distancia))
else t5 <- data.frame(cbind(Grupo,Renta_Mixta,porcentajePoblacion,Importancia,Cuadrante,Porcentaje_Recursos,Distancia))
}
Tabla_Cuadrante <- data.frame(rbind(as.matrix(t1),as.matrix(t2),as.matrix(t3),as.matrix(t4),as.matrix(t5)))
#Para el calculo de las distancias
Poblacion<- 0
Inmigracion <- 0
Tasa_paro <- 0
Renta_Personal <- 0
Renta_Familiar <- 0
Renta_Mixta <- 0
porcentajePoblacion <- Poblacion * 100 / Poblacion_total
Cluster <- 0
g6 <- data.frame(cbind(Poblacion, Inmigracion, Tasa_paro, Renta_Personal, Renta_Familiar, Renta_Mixta,porcentajePoblacion,Cluster))
medias_total <- data.frame(rbind(as.matrix(g1),as.matrix(g2),as.matrix(g3),as.matrix(g4),as.matrix(g5),as.matrix(g6)))
remove(g1,g2,g3,g4,g5,g6,t1,t2,t3,t4,t5)
Distancias_Totales <- dist(scale(medias_total))
Tabla_Cuadrante[1,7] <- lapply(Distancias_Totales[5],round, 1)
Tabla_Cuadrante[2,7] <- lapply(Distancias_Totales[9],round, 1)
Tabla_Cuadrante[3,7] <- lapply(Distancias_Totales[12],round, 1)
Tabla_Cuadrante[4,7] <- lapply(Distancias_Totales[14],round, 1)
Tabla_Cuadrante[5,7] <- lapply(Distancias_Totales[15],round, 1)
View(medias_total)
View(Tabla_Cuadrante)
remove(i)
cont1 <- 0
cont2 <- 0
cont3 <- 0
cont4 <- 0
for(i in 1:5){
if(Tabla_Cuadrante[i,5] == 1){
if(cont1 == 0){
Grupo1 <- Tabla_Cuadrante[i,]
cont1 <- 1
}
else{
fila <- data.frame(Tabla_Cuadrante[i,])
Grupo1 <- rbind(Grupo1,fila)
}
}else if(Tabla_Cuadrante[i,5] == 2){
if(cont2 == 0){
Grupo2 <- Tabla_Cuadrante[i,]
cont2 <- 1
}
else{
fila <- data.frame(Tabla_Cuadrante[i,])
Grupo2 <- rbind(Grupo2,fila)
}
}else if(Tabla_Cuadrante[i,5] == 3){
if(cont3== 0){
Grupo3 <- Tabla_Cuadrante[i,]
cont3 <- 1
}
else{
fila <- data.frame(Tabla_Cuadrante[i,])
Grupo3<- rbind(Grupo3,fila)
}
}else{
if(cont4 == 0){
Grupo4 <- Tabla_Cuadrante[i,]
cont4 <- 1
}
else{
fila <- data.frame(Tabla_Cuadrante[i,])
Grupo4 <- rbind(Grupo4,fila)
}
}
}
View(Grupo1)
View(Grupo1)
View(Grupo1)
View(Grupo3)
View(Grupo4)
remove(fila,cont1,cont2,cont3,cont4,i,Cluster,Cuadrante,Distancia,Distancias_Totales,Grupo,Importancia,Inmigracion,Poblacion,Poblacion_Cuadrante,Porcentaje_Recursos,Renta_Cuadrante,Renta_Familiar,Renta_Mixta,Renta_Personal,Tasa_paro,Poblacion_total,porcentajePoblacion)
Importancia_Total <- sum(Tabla_Cuadrante$Importancia)
for(i in 1:5){
Tabla_Cuadrante[i,6] <- lapply(100*Tabla_Cuadrante[i,4]/Importancia_Total,round,1)
}
for(i in 1:5){
if(Tabla_Cuadrante[i,5] == 4){
for(j in 1:3){
if(Tabla_Cuadrante[i,7] > Grupo4[j,7]){
Tabla_Cuadrante[i,6] <- Tabla_Cuadrante[i,6] - (Tabla_Cuadrante[i,7] - Grupo4[j,7])*5
}else{
Tabla_Cuadrante[i,6] <- Tabla_Cuadrante[i,6] + (Grupo4[j,7] - Tabla_Cuadrante[i,7])*5
}
}
}
}
